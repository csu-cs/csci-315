import{_ as t,c as i,o as a,af as l,ai as o,aj as r,ak as d,al as s,am as n,an as c,ao as p,ap as h,aq as g,ar as m}from"./chunks/framework.HDGmwDL2.js";const T=JSON.parse('{"title":"Basic Unix Commands","description":"","frontmatter":{},"headers":[],"relativePath":"lectures/01-basic-unix.md","filePath":"lectures/01-basic-unix.md","lastUpdated":1755268310000}'),u={name:"lectures/01-basic-unix.md"};function f(y,e,x,b,w,k){return a(),i("div",null,e[0]||(e[0]=[l('<h1 id="basic-unix-commands" tabindex="-1">Basic Unix Commands <a class="header-anchor" href="#basic-unix-commands" aria-label="Permalink to “Basic Unix Commands”">​</a></h1><h2 id="learning-outcomes" tabindex="-1">Learning Outcomes <a class="header-anchor" href="#learning-outcomes" aria-label="Permalink to “Learning Outcomes”">​</a></h2><p>By the end of this lecture, you should be able to:</p><ol><li>Identify and use common Unix/Linux commands for file and directory management.</li><li>Choose and operate basic text editors in a Unix environment.</li><li>Understand and apply file permissions and user/group management commands.</li><li>Use input/output redirection and pipes to manipulate command-line data.</li><li>Utilize regular expressions for pattern matching in file operations.</li><li>Locate and interpret system and user information using Unix commands.</li></ol><h2 id="text-editors" tabindex="-1">Text Editors <a class="header-anchor" href="#text-editors" aria-label="Permalink to “Text Editors”">​</a></h2><p>Choosing a text editor is an important step in your Unix/Linux journey. You will use your editor frequently, so investing time to learn one well will pay off.</p><h3 id="types-of-text-editors" tabindex="-1">Types of Text Editors <a class="header-anchor" href="#types-of-text-editors" aria-label="Permalink to “Types of Text Editors”">​</a></h3><ul><li><p><strong>Terminal-based editors:</strong></p><ul><li><em>Vi, Vim, Neovim</em>: Lightweight, available on almost every system, but have a steep learning curve. Once learned, they are very fast and efficient. <ul><li>See the <a href="https://vim.rtorr.com/" target="_blank" rel="noreferrer">cheat sheets</a>.</li><li>Try <code>vimtutor</code> in the terminal for a hands-on tutorial.</li></ul></li><li><em>Emacs</em>: Highly customizable and powerful, but also has a learning curve.</li><li><em>nano</em>: Simple and beginner-friendly, available on most systems.</li></ul></li><li><p><strong>Graphical editors:</strong></p><ul><li><a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">VS Code</a>: Popular, extensible, and user-friendly.</li><li>gVim: Graphical version of Vim.</li><li>Xemacs: Graphical Emacs.</li><li>gedit: Simple, similar to Notepad.</li><li>Sublime Text: Powerful, modern editor (unlimited free trial).</li><li>Kate, Tea, Jed: Other graphical options.</li></ul></li></ul><div class="tip custom-block"><p class="custom-block-title custom-block-title-default">TIP</p><p>People can be passionate about their editor of choice. Try a few and see what works best for you.</p></div><h3 id="vi-vim-neovim" tabindex="-1">Vi, Vim, Neovim <a class="header-anchor" href="#vi-vim-neovim" aria-label="Permalink to “Vi, Vim, Neovim”">​</a></h3><p>Lightweight with a high learning curve, but <em>fast</em> once learned.</p><table tabindex="0"><thead><tr><th style="text-align:center;"></th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:center;"><code>:q</code></td><td style="text-align:left;">to quite from vim</td></tr><tr><td style="text-align:center;"><code>:wq</code></td><td style="text-align:left;">to write change and quit</td></tr><tr><td style="text-align:center;"><code>:q!</code></td><td style="text-align:left;">to quit without saving</td></tr><tr><td style="text-align:center;"><code>ESC</code></td><td style="text-align:left;">to exit from editing mode</td></tr><tr><td style="text-align:center;"><code>i</code></td><td style="text-align:left;">to insert</td></tr><tr><td style="text-align:center;"><code>x</code></td><td style="text-align:left;">to delete a char</td></tr><tr><td style="text-align:center;"><code>dd</code></td><td style="text-align:left;">to delete a line</td></tr><tr><td style="text-align:center;"><code>/</code></td><td style="text-align:left;">to text search</td></tr></tbody></table><ul><li>The same on every machine.</li><li>See the <a href="https://vim.rtorr.com/" target="_blank" rel="noreferrer">cheat sheets</a>.</li><li>Type <code>vimtutor</code> in the terminal for an iterative tutorial.</li></ul><figure><img src="'+o+'" alt="Vi Meme" width="350px&quot;"><figcaption>Meme emphasizing the speed and clarity users have with the tried-and-true Vi or it&#39;s directives.</figcaption></figure><figure><img src="'+r+'" alt="Vim screenshot"><figcaption>Example of using Vim to edit C++ code</figcaption></figure><h3 id="emacs-editor-macros" tabindex="-1">EMACS (Editor MACroS) <a class="header-anchor" href="#emacs-editor-macros" aria-label="Permalink to “EMACS (Editor MACroS)”">​</a></h3><ul><li>Lots of features -- tons of capabilities</li><li>LISP</li><li>Your hand may be warped from all the hotkeys.</li><li>Not always the same on every machine</li></ul><figure><img src="'+d+'" alt="EMACS meme" width="300px&quot;"><figcaption>EMACS is powerful and highly customizable.</figcaption></figure><h3 id="nano" tabindex="-1">nano <a class="header-anchor" href="#nano" aria-label="Permalink to “nano”">​</a></h3><ul><li>Simple! The same on every machine.</li><li>The commands are at the bottom of your screen. <ul><li><strong><code>^</code></strong> stands for <code>Ctrl</code>.</li><li><code>Ctrl</code> + <code>G</code> displays the help screen.</li></ul></li><li>Good for quick edits, but not powerful enough for software development.</li></ul><figure><img src="'+s+'" alt="Nano Screenshot" width="400px&quot;"><figcaption>Example of using nano to edit C++ code.</figcaption></figure><figure><img src="'+n+'" alt="EMACS meme" width="300px&quot;"><figcaption>Don&#39;t use nano as your primary editor for coding.</figcaption></figure><h2 id="directory-operations" tabindex="-1">Directory Operations <a class="header-anchor" href="#directory-operations" aria-label="Permalink to “Directory Operations”">​</a></h2><h3 id="ls-list-files-and-directories" tabindex="-1"><code>ls</code> -- List files and directories. <a class="header-anchor" href="#ls-list-files-and-directories" aria-label="Permalink to “ls -- List files and directories.”">​</a></h3><p><code>ls</code> displays a list of files in the current working directory, like <code>dir</code> in DOS.</p><table tabindex="0"><thead><tr><th style="text-align:left;"></th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;"><code>-a</code></td><td style="text-align:left;">Display hidden (start with a ‘<code>.</code>’) files.</td></tr><tr><td style="text-align:left;"><code>-A</code></td><td style="text-align:left;">Do not display ‘<code>.</code>’ and ‘<code>..</code>’.</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">‘<code>.</code>’ means current directory.</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">‘<code>..</code>’ means upper layer directory.</td></tr><tr><td style="text-align:left;"><code>-l</code></td><td style="text-align:left;">Display file lists with long format.</td></tr><tr><td style="text-align:left;"><code>-s</code></td><td style="text-align:left;">Display file size.</td></tr><tr><td style="text-align:left;"><code>-h</code></td><td style="text-align:left;">Display sizes in a more human readable format.</td></tr></tbody></table><h3 id="cd-change-directories-change-the-working-directory" tabindex="-1"><code>cd</code> -- Change directories (change the working directory). <a class="header-anchor" href="#cd-change-directories-change-the-working-directory" aria-label="Permalink to “cd -- Change directories (change the working directory).”">​</a></h3><p>Usage: <code>cd &lt;DIRECTORY&gt;</code></p><table tabindex="0"><thead><tr><th style="text-align:left;"></th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;"><code>cd /usr/bin</code></td><td style="text-align:left;">Change the directory to <code>/usr/bin</code>.</td></tr><tr><td style="text-align:left;"><code>cd ..</code></td><td style="text-align:left;">Change to the parent directory.</td></tr><tr><td style="text-align:left;"><code>cd /</code></td><td style="text-align:left;">Change to the root directory.</td></tr><tr><td style="text-align:left;"><code>cd ~</code></td><td style="text-align:left;">Change to the user’s home directory.</td></tr></tbody></table><h3 id="making-directories" tabindex="-1">Making Directories <a class="header-anchor" href="#making-directories" aria-label="Permalink to “Making Directories”">​</a></h3><p><code>mkdir DIRECTORY</code> -- Create the DIRECTORY(ies) that do not already exist.</p><table tabindex="0"><thead><tr><th style="text-align:left;"></th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;"><code>mkdir temp</code></td><td style="text-align:left;">Make a directory named <code>temp</code>.</td></tr><tr><td style="text-align:left;"><code>mkdir temp2</code></td><td style="text-align:left;">Make a directory named <code>temp2</code></td></tr><tr><td style="text-align:left;"><code>mkdir temp/insideTemp</code></td><td style="text-align:left;">Make <code>insideTemp</code> directory within <code>temp</code>.</td></tr></tbody></table><h3 id="removing-directories" tabindex="-1">Removing Directories <a class="header-anchor" href="#removing-directories" aria-label="Permalink to “Removing Directories”">​</a></h3><p><code>rmdir DIRECTORY</code> -- Remove the DIRECTORY(ies) if they are empty.</p><table tabindex="0"><thead><tr><th style="text-align:left;"></th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;"><code>rmdir temp</code></td><td style="text-align:left;">Remove a directory named <code>temp</code>.</td></tr><tr><td style="text-align:left;"><code>rmdir temp2</code></td><td style="text-align:left;">Remove a directory named <code>temp2</code></td></tr><tr><td style="text-align:left;"><code>rmdir temp/insideTemp</code></td><td style="text-align:left;">Remove the <code>insideTemp</code> directory that is within <code>temp</code>.</td></tr></tbody></table><p><code>rm -r DIRECTORY</code> -- Remove directories and their contents recursively.</p><h3 id="directory-usage" tabindex="-1">Directory Usage <a class="header-anchor" href="#directory-usage" aria-label="Permalink to “Directory Usage”">​</a></h3><ul><li><p>Any command that accepts a file or folder as a parameter assumes that the file is in the present working directory (PWD) unless told otherwise.</p></li><li><p>Use relative or absolute paths to indicate where a file is.</p></li><li><p>Absolute paths start with a <code>/</code> and the path begins from the highest level.</p></li><li><p>Relative paths NEVER start with a <code>/</code> and are how to get to the file from the PWD.</p></li><li><p><code>..</code> is your parent directory, useful in relative paths</p></li></ul><h2 id="file-operations" tabindex="-1">File Operations <a class="header-anchor" href="#file-operations" aria-label="Permalink to “File Operations”">​</a></h2><h3 id="cp-copy-source-to-dest-usage-cp-options-source-dest" tabindex="-1"><strong><code>cp</code></strong> -- Copy SOURCE to DEST. Usage: <code>cp [OPTIONS] SOURCE DEST</code> <a class="header-anchor" href="#cp-copy-source-to-dest-usage-cp-options-source-dest" aria-label="Permalink to “cp -- Copy SOURCE to DEST. Usage: cp [OPTIONS] SOURCE DEST”">​</a></h3><ul><li><p><code>cp data1.txt data2.txt</code></p></li><li><p><code>cp data3.txt temp</code></p></li><li><p>Options:</p><table tabindex="0"><thead><tr><th style="text-align:left;"></th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;"><code>-i</code></td><td style="text-align:left;">Ask before overwrite.</td></tr><tr><td style="text-align:left;"><code>-v</code></td><td style="text-align:left;">Display copying process.</td></tr><tr><td style="text-align:left;"><code>-R</code></td><td style="text-align:left;">Recursive copy, including sub-directories.</td></tr></tbody></table></li><li><p><code>cp -R * backup</code> -- Copy all files in current directory into <code>backup</code>.</p></li></ul><h3 id="rm-remove-the-file-s" tabindex="-1"><strong><code>rm</code></strong> -- Remove the FILE(s). <a class="header-anchor" href="#rm-remove-the-file-s" aria-label="Permalink to “rm -- Remove the FILE(s).”">​</a></h3><p>Usage: <code>rm [OPTIONS] [FILES]</code></p><ul><li><p><code>rm data1.txt</code></p></li><li><p><code>rm *</code></p></li><li><p>Options:</p><table tabindex="0"><thead><tr><th style="text-align:left;"></th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;"><code>-f</code></td><td style="text-align:left;">Force remove files.</td></tr><tr><td style="text-align:left;"><code>-r</code></td><td style="text-align:left;">Recursive remove files, including sub-directories.</td></tr><tr><td style="text-align:left;"><code>-v</code></td><td style="text-align:left;">Display removing process.</td></tr></tbody></table></li><li><p><code>rm -f *.txt</code> -- Removes all files ending in .txt from the current directory.</p></li><li><p><code>rm -r *</code> -- Removes all files and folders from the current directory.</p></li></ul><h3 id="other-file-operations" tabindex="-1">Other File Operations <a class="header-anchor" href="#other-file-operations" aria-label="Permalink to “Other File Operations”">​</a></h3><ul><li><p><code>mv</code> -- Move files or rename a file.</p><ul><li><p><code>mv data1.txt ..</code></p></li><li><p><code>mv data1.txt data4.txt</code></p></li></ul></li><li><p><code>pwd</code> -- Print (present) working directory.</p></li><li><p><code>file</code> -- Display file type.</p><ul><li><p><code>file filename</code></p></li><li><p><code>file *</code></p></li></ul></li><li><p><code>head</code> -- Displays the first 10 lines of each FILE.</p><ul><li><p><code>head data1.txt</code> shows first 10 lines of <code>data1.txt</code></p></li><li><p><code>head -20 data1.txt</code> shows first 20 lines</p></li></ul></li><li><p><code>tail</code> -- Displays the last 10 lines of each FILE.</p><ul><li><code>tail data1.txt</code> shows last 10 lines of <code>data1.txt</code></li></ul></li><li><p><code>wc</code> -- Displays line count, unique <em>word count</em>, and total <em>word count</em> for each FILE (and a total line if more than one FILE is specified).</p></li><li><p><code>find</code> -- Find files and directories (and perform operations on them).</p><ul><li><p><code>-name</code> -- the filename you are looking for</p></li><li><p><code>-print</code> -- output results</p></li><li><p><code>find /usr -name config -print</code><br> Displays where all the files named <code>compress</code> are located.</p></li></ul></li><li><p><code>grep</code> -- Search for PATTERNS in each FILE.</p><ul><li>Usage: <code>grep [OPTIONS] PATTERNS [FILE].</code></li></ul></li><li><p><code>ln</code> -- Create a link to TARGET with the name LINK_NAME.</p><ul><li><p>Usage: <code>ln [OPTIONS] TARGET LINK\\_NAME</code></p></li><li><p><code>-s</code> Create a symbolic link.</p></li><li><p><code>ln -s target.txt newname.txt</code></p></li><li><p>More later on linking.</p></li></ul></li></ul><h2 id="redirects" tabindex="-1">Redirects <a class="header-anchor" href="#redirects" aria-label="Permalink to “Redirects”">​</a></h2><h3 id="input-output-i-o" tabindex="-1">Input/Output (I/O) <a class="header-anchor" href="#input-output-i-o" aria-label="Permalink to “Input/Output (I/O)”">​</a></h3><p>There are three standard input/output devices.</p><table tabindex="0"><thead><tr><th style="text-align:left;"></th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;"><code>stdin</code></td><td style="text-align:left;">keyboard input</td></tr><tr><td style="text-align:left;"><code>stdout</code></td><td style="text-align:left;">Monitor output</td></tr><tr><td style="text-align:left;"><code>stderr</code></td><td style="text-align:left;">Error output device</td></tr></tbody></table><figure class="light-only"><img src="'+c+'" alt="Input/Output for a Process" width="350px" class="light-only"><figcaption>Input/Output for a Process</figcaption></figure><figure class="dark-only"><img src="'+p+'" alt="Input/Output for a Process" width="350px" class="dark-only"><figcaption>Input/Output for a Process</figcaption></figure><p>The Pipe Operator (<strong><code>|</code></strong>)</p><ul><li><p>Redirect output of one program to another.</p></li><li><p>For Example,<br><code>ls -al /etc | more</code></p><figure class="light-only"><img src="'+h+'" alt="Piping" width="350px" class="light-only"><figcaption>The output of ls is piped as the input to more</figcaption></figure><figure class="dark-only"><img src="'+g+'" alt="Piping" width="600px" class="dark-only"><figcaption>The output of ls is piped as the input to more</figcaption></figure></li><li><p>This can continue on</p></li><li><p>What Data Structure does this look like?</p></li></ul><h3 id="i-o-redirect-to-files" tabindex="-1">I/O Redirect to Files <a class="header-anchor" href="#i-o-redirect-to-files" aria-label="Permalink to “I/O Redirect to Files”">​</a></h3><ul><li><p>Use <code>&lt;</code> and <code>&gt;</code> to redirect I/Os</p></li><li><p><code>cat &gt; output.dat</code></p></li><li><p>Use Ctrl-d to quit</p></li><li><p><code>cat &gt;&gt; output.dat</code></p><ul><li>Append new output to the end of output.dat.</li></ul></li><li><p><code>cat !&gt; output.dat</code></p><ul><li>Force overwrite output.dat.</li></ul></li><li><p><code>more</code> -- Pause viewing output.</p><ul><li><p><code>ls -al | more</code></p></li><li><p><code>more data1.txt</code></p></li><li><p>Type <code>:q</code> to exit.</p></li></ul></li><li><p><code>less</code> -- Hmmm, what does less do?</p></li><li><p><code>cat</code> -- Display or <em>concatenate</em> files.</p><ul><li><p><code>cat data1.txt | more</code></p></li><li><p><code>cat data1.txt &gt;&gt; data2.txt</code></p></li><li><p><code>cat data1.txt data2.txt &gt;&gt; data3.txt</code></p></li></ul></li><li><p><code>tac</code> -- Hmmm, what does <code>tac</code> do?</p></li></ul><h3 id="looking-up-how-a-command-works" tabindex="-1">Looking up how a command works. <a class="header-anchor" href="#looking-up-how-a-command-works" aria-label="Permalink to “Looking up how a command works.”">​</a></h3><ul><li><p>The <code>--help</code> argument displays how to use (almost) any command.</p><ul><li><code>ls --help</code></li></ul></li><li><p><code>man</code> -- Display the <em>manual</em> for a command.</p><ul><li><code>man ls</code></li></ul></li><li><p><code>info</code> -- Displays the information about a command.</p><ul><li><code>info ls</code></li></ul></li></ul><h2 id="regular-expressions-regex" tabindex="-1">Regular Expressions (RegEx) <a class="header-anchor" href="#regular-expressions-regex" aria-label="Permalink to “Regular Expressions (RegEx)”">​</a></h2><p>Sets of special characters that help you match a pattern.</p><table tabindex="0"><thead><tr><th style="text-align:center;"></th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:center;"><code>*</code></td><td style="text-align:left;">All possible combination(s)</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;"><code>des*</code> – desk, desktop, description,</td></tr><tr><td style="text-align:center;"><code>?</code></td><td style="text-align:left;">Any single character</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;"><code>des?</code> – desk, des9,</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;"><code>ls -al *.ps</code></td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;"><code>cat ??go</code></td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;"><code>more *a*b?</code></td></tr><tr><td style="text-align:center;"><code>[ ]</code></td><td style="text-align:left;">Symbols in the square brackets</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;"><code>ls -al [ms]oon</code> displays files named: moon and soon</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;"><code>more [a-p]ount</code> displays contents of files named:</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">aount, bount, count, , pount</td></tr></tbody></table><h2 id="user-administration" tabindex="-1">User Administration <a class="header-anchor" href="#user-administration" aria-label="Permalink to “User Administration”">​</a></h2><h3 id="user-management-tools" tabindex="-1">User-Management Tools <a class="header-anchor" href="#user-management-tools" aria-label="Permalink to “User-Management Tools”">​</a></h3><ul><li><p><code>useradd</code> -- Adds a new user account to the system. Its options permit the sysadmin to specify the user&#39;s home directory and initial group or to create the user with the default home directory and group assignments.</p></li><li><p><code>useradd -D</code> -- Displays default settings for new users</p></li><li><p><code>useradd -G</code> -- Sets the system defaults for creating the users&#39; home directory, account expiration date, default group, and command shell. See the specific options in <code>man useradd</code>. Used without any arguments, it displays the defaults for the system. The default set of files for a user are found in <code>/etc/skel</code>.</p><ul><li><code>ls -al /etc/skel</code> -- will list the files with the defaults.</li></ul></li><li><p><code>userdel</code> -- Will completely remove a user&#39;s account (thereby eliminating that user&#39;s home directory and all files it contains).</p></li><li><p><code>passwd</code> -- Change a user&#39;s <em>password</em>.</p></li><li><p><code>usermod</code> -- Changes several user attributes. The most commonly used arguments are -s to change the shell and -u to change the UID. No changes can be made while the user is logged in or running a process.</p></li><li><p><code>chsh</code> -- Changes the user&#39;s default shell. For Fedora, Debian, and others, the default shell is <code>/bin/bash</code>, known as the Bash (or Bourne Again Shell).</p></li></ul><p><code>useradd winnie -p gu1tarplayeR -s /bin/bash -u 507</code></p><figure><img src="'+m+`" alt="Adding a user with a GUI" width="400px"><figcaption>Adding a user with a GUI.</figcaption></figure><h3 id="group-hug" tabindex="-1">Group Hug <a class="header-anchor" href="#group-hug" aria-label="Permalink to “Group Hug”">​</a></h3><p>Groups establish relationships among users where they<br> share a common set of permissions.</p><ul><li><p>All the groups are listed in <code>/etc/group</code> file.</p></li><li><p>Group-Management Tools:</p><ul><li><p>Add a new group with the <code>groupadd</code> command.<br><code>groupadd www-data</code></p></li><li><p>Change the group ownership of a file with the <code>chgrp</code> command.<br><code>chgrp www-data /srv/www</code></p></li><li><p>Add the approved user to the group with <code>usermod</code>.<br><code>usermod -G www-data shelley</code></p></li><li><p>Make <code>shelley</code> the group administrator with <code>gpasswd</code>, so that she can add new users to the group.<br><code>gpasswd -A shelley</code></p></li></ul></li></ul><h3 id="user-accounts" tabindex="-1">User Accounts <a class="header-anchor" href="#user-accounts" aria-label="Permalink to “User Accounts”">​</a></h3><ul><li><p>Usually, <code>/etc/passwd</code> holds user account information. Each user, regardless of type, will have a one-line entry of account information stored in this text file.</p></li><li><p>The superuser is known by the name <em>root</em>.</p></li><li><p>User IDs and Group IDs</p></li><li><p>File Permissions:</p><table tabindex="0"><thead><tr><th style="text-align:left;"></th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;"><code>chgrp</code></td><td style="text-align:left;">Changes the group ownership of a file.</td></tr><tr><td style="text-align:left;"><code>chown</code></td><td style="text-align:left;">Changes the owner of a file.</td></tr><tr><td style="text-align:left;"><code>chmod</code></td><td style="text-align:left;">Changes the access permissions of a file.</td></tr></tbody></table></li><li><p>The password file is <code>/etc/passwd</code>, and it is the database file for all users on the system. The format of each line is as follows:<br><code>username:password:uid:gid:gecos:homedir:shell</code></p></li><li><p>Example:</p><div class="language-txt line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>root:x:0:0:root:/root:/bin/bash</span></span>
<span class="line"><span>sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span></span>
<span class="line"><span>rpc:x:32:32:Portmapper RPC user:/:/sbin/nologin</span></span>
<span class="line"><span>rpcuser:x:29:29:RPC Service User:/var/lib/nfs:/sbin/nologin</span></span>
<span class="line"><span>nfsnobody:x:65534:65534:Anonymous NFS User:/var/lib/nfs:/sbin/nologin</span></span>
<span class="line"><span>mailnull:x:47:47::/var/spool/mqueue:/sbin/nologin</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li></ul><p>File Permissions using <strong><code>chmod</code></strong> Try <code>ls -l</code>.</p><div class="language-txt line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>- rwxr-xr-x joe acctg archive.sh</span></span>
<span class="line"><span>- rw-rw-r-- joe acctg orgchart.gif</span></span>
<span class="line"><span>- rw-rw-r-- joe acctg personnel.txt</span></span>
<span class="line"><span>- r--rw-r-- joe acctg public.html</span></span>
<span class="line"><span>d rwxr-xr-x joe acctg sales</span></span>
<span class="line"><span>- rw-r----- joe acctg topsecret.inf</span></span>
<span class="line"><span>- rwxr-xr-x joe acctg wordmatic</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>The first set of three letters after the file type describes the permissions the owner of the file has.</p><p>An <code>r</code> in the first position means you are permitted to read the file.<br> A <code>w</code> in the second position means you may write to or delete the file.<br> An <code>x</code> in the third position means you may execute the file.</p><p>A hyphen represents a denied permission at its position.</p><p>File Permissions using <strong><code>chmod</code></strong> The most succinct way to use <code>chmod</code> is with numbers. Each permission is assigned a value:<br> r = 4, w = 2, x = 1, Therefore,</p><table tabindex="0"><thead><tr><th style="text-align:center;"></th><th style="text-align:left;"></th><th style="text-align:center;"></th></tr></thead><tbody><tr><td style="text-align:center;"><strong>Value</strong></td><td style="text-align:left;"><strong>Meaning</strong></td><td style="text-align:center;"><strong>Binary</strong></td></tr><tr><td style="text-align:center;">0</td><td style="text-align:left;">No permission</td><td style="text-align:center;"><code>000</code></td></tr><tr><td style="text-align:center;">1</td><td style="text-align:left;">Execute only</td><td style="text-align:center;"><code>001</code></td></tr><tr><td style="text-align:center;">4</td><td style="text-align:left;">Read only</td><td style="text-align:center;"><code>100</code></td></tr><tr><td style="text-align:center;">5</td><td style="text-align:left;">Read &amp; Execute</td><td style="text-align:center;"><code>101</code></td></tr><tr><td style="text-align:center;">6</td><td style="text-align:left;">Read &amp; Write</td><td style="text-align:center;"><code>110</code></td></tr><tr><td style="text-align:center;">7</td><td style="text-align:left;">Full permission</td><td style="text-align:center;"><code>111</code></td></tr></tbody></table><p>Using <strong><code>chmod</code></strong> With <code>chmod</code> you have three numbers: first for the owner, second for group, third for everyone else.</p><p>Let&#39;s look at some examples.</p><table tabindex="0"><thead><tr><th style="text-align:right;"></th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:right;">Before:</td><td style="text-align:left;"><code>-rwxr-xr-x archive.sh</code></td></tr><tr><td style="text-align:right;">Command:</td><td style="text-align:left;"><code>chmod 754 archive.sh</code></td></tr><tr><td style="text-align:right;">After:</td><td style="text-align:left;"><code>-rwxr-xr-- archive.sh</code></td></tr><tr><td style="text-align:right;">Before:</td><td style="text-align:left;"><code>-rw-r--r-- topsecret.txt</code></td></tr><tr><td style="text-align:right;">Command:</td><td style="text-align:left;"><code>chmod 600 topsecret.txt</code></td></tr><tr><td style="text-align:right;">After:</td><td style="text-align:left;"><code>-rw------- topsecret.txt</code></td></tr><tr><td style="text-align:right;">Before:</td><td style="text-align:left;"><code>-rw------- publicity.html</code></td></tr><tr><td style="text-align:right;">Command:</td><td style="text-align:left;"><code>chmod 665 publicity</code></td></tr><tr><td style="text-align:right;">After:</td><td style="text-align:left;"><code>-rw-rw-r-- publicity.html</code></td></tr></tbody></table><h3 id="become-root" tabindex="-1">Become Root! <a class="header-anchor" href="#become-root" aria-label="Permalink to “Become Root!”">​</a></h3><ul><li><p>Temporarily changing the user identity with the <code>su</code> command.<br><code>su - root</code></p></li><li><p>In many Linux distributions, the root user is disabled by default. Instead, <code>sudo</code> can be added to the beginning of a command to temporally grant the command root permissions. This gives admins greater control of what has the power to do anything on the system.</p></li></ul><h3 id="system-information" tabindex="-1">System Information <a class="header-anchor" href="#system-information" aria-label="Permalink to “System Information”">​</a></h3><ul><li><p>Get the name, version, and other details about the current machine and the operating system.<br><code>uname -a</code></p></li><li><p>The <code>-a</code> argument stands for all. Other arguments provide more specific information.</p></li></ul><h2 id="lab-01" tabindex="-1">Lab 01 <a class="header-anchor" href="#lab-01" aria-label="Permalink to “Lab 01”">​</a></h2><p>On Blackboard:</p><ol><li><p>Follow the instructions for Lab 01.</p></li><li><p>This lab will be manually graded.</p></li><li><p>Future labs will be submitted via your fork of the class git repository.</p></li></ol><p>Don&#39;t forget:</p><ol start="0"><li><p>Submit your GitHub username on Blackboard so I can grant you access.</p></li><li><p>Fork repository from GitHub.</p></li><li><p>Clone your forked copy to your computer.</p></li></ol>`,90)]))}const P=t(u,[["render",f]]);export{T as __pageData,P as default};
