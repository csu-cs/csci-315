import{_ as e,c as s,o as i,af as n}from"./chunks/framework.HDGmwDL2.js";const k=JSON.parse('{"title":"Midterm Study Guide","description":"","frontmatter":{},"headers":[],"relativePath":"guides/midterm-study-guide.md","filePath":"guides/midterm-study-guide.md","lastUpdated":1755268310000}'),a={name:"guides/midterm-study-guide.md"};function l(r,t,d,h,p,o){return i(),s("div",null,t[0]||(t[0]=[n(`<h1 id="midterm-study-guide" tabindex="-1">Midterm Study Guide <a class="header-anchor" href="#midterm-study-guide" aria-label="Permalink to “Midterm Study Guide”">​</a></h1><p>See <a href="/csci-315/syllabus#tentative-weekly-schedule">the syllabus</a> for the deadline.</p><p>The exam will consist of two sections. Take one part during class time.</p><ol><li><p>A GitHub/Auto-Grader section (60% of exam grade) will consist of four programming problems. Each problem will have a time limit to complete.</p></li><li><p>A <a href="https://csuniv.blackboard.com/" target="_blank" rel="noreferrer">Blackboard</a> section (40% of exam grade) will consist of standard essay/short answer questions. This part is closed book, closed notes, closed internet, etc.</p></li></ol><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>In-person students must take part 1 of the exam in class on the scheduled due date.</p></div><p>The exam will consist of programming problems, understanding checks, and analysis of algorithms (showing the state at each step) through Blackboard. Additionally, there will be some concept questions on Blackboard. I will be grading the logic/concepts (style, clarity, performance, etc.) of your code and your ability to perform analysis of code/algorithms. It is in your best interest to be verbose so I can award as many points as possible. I&#39;m looking for logic/concepts as well as the style, clarity, and performance of your code.</p><p>The material will cover what we have discussed so far, including:</p><ul><li>arrays,</li><li>Big-O analysis,</li><li>operator overloading,</li><li>pointers,</li><li>recursion</li><li>searching,</li><li>singly/doubly linked lists,</li><li>sorting (Bubble, Selection, Insertion, Quick, Merge),</li><li>stacks and queues,</li><li>static/stack/heap memory, and</li><li>templates.</li></ul><h2 id="example-problem-1" tabindex="-1">Example Problem 1 <a class="header-anchor" href="#example-problem-1" aria-label="Permalink to “Example Problem 1”">​</a></h2><p><code>DoubleList</code> is a doubly-linked list that has both head and tail pointers (to the beginning and end of the list respectively):</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DoubleList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  DoubleList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nullptr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nullptr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> insertEnd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> insertSorted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mergeSortedLists</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DoubleList</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> otherList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //Note: Use of this constructor is optional</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Node </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nullptr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Node </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nullptr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prev</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p) {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Node </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pNext, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pPrev;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Node </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pHead, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pTail;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>(14 points) Implement the <code>mergeSortedLists</code> member function merges the list from the parameter into the member list so that the values are sorted. This function should not create new nodes but instead move the nodes from the parameter list into the correct positions in the member list. Therefore, the parameter list will be empty when the function returns.</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DoubleList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mergeSortedLists</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DoubleList</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> otherList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Note: We have covered Doubly-Linked Lists and Merge Sort but the exam will ask you to solve a new problem using what you already know. Therefore, on the exam I may add a twist to the data structure.</p><h2 id="example-problem-2" tabindex="-1">Example Problem 2 <a class="header-anchor" href="#example-problem-2" aria-label="Permalink to “Example Problem 2”">​</a></h2><p>Below is another example to be ready for. (You <em>will</em> see something like this on your midterm).</p><p>(10 points) Perform Bubble, Selection, or Insertion sort on the following (be sure to tell me which sort you are doing <em>AND</em> show each step):</p><table tabindex="0"><thead><tr><th style="text-align:center;"><strong>2</strong></th><th style="text-align:center;"><strong>8</strong></th><th style="text-align:center;"><strong>9</strong></th><th style="text-align:center;"><strong>0</strong></th><th style="text-align:center;"><strong>5</strong></th><th style="text-align:center;"><strong>6</strong></th><th style="text-align:center;"><strong>1</strong></th><th style="text-align:center;"><strong>3</strong></th><th style="text-align:center;"><strong>4</strong></th><th style="text-align:center;"><strong>7</strong></th></tr></thead><tbody><tr><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td></tr><tr><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td></tr><tr><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td></tr><tr><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td></tr><tr><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td></tr><tr><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td></tr><tr><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td></tr><tr><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td></tr><tr><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td></tr><tr><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td></tr><tr><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td><td style="text-align:center;">.</td></tr></tbody></table><p>(10 points) Using the same set of data perform Quick or Merge sort. Why was it faster?</p><h2 id="exam-strategy" tabindex="-1">Exam Strategy <a class="header-anchor" href="#exam-strategy" aria-label="Permalink to “Exam Strategy”">​</a></h2><p>Some things to keep in mind for the Auto-Graded section:</p><ul><li><p>The exam1-0 problem will not count for a grade and should be used as practice before attempting the other problems.</p></li><li><p>Generative AI is prohibited. Before starting, uninstall any AI extensions VS Code and close out any Internet tabs for ChatGPT, etc.</p></li><li><p>You may refer to any of the files in the course repository including your solutions to this semester’s labs and projects.</p></li><li><p>There are different time limits for each problem. Finishing a problem early doesn&#39;t give you more time for the other problems. I recommend starting a timer on your phone/computer so you know when you are nearing the deadline after starting.</p></li><li><p>Each question has a set of test cases to pass. Your grade will be based on the percentage of test cases you pass. Consider what additional test cases you may need to consider as you manage your time.</p></li><li><p>Make sure your last submission is your best.</p></li><li><p>You may submit for testing as many times as you wish.</p></li></ul>`,22)]))}const c=e(a,[["render",l]]);export{k as __pageData,c as default};
