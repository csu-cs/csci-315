import{_ as t,c as r,o as n,j as e,af as s,a,as as o,at as l,au as u,av as h,aw as p,ax as c,ay as d,az as m,aA as g,aB as f,aC as b,aD as w,aE as k,aF as y}from"./chunks/framework.HDGmwDL2.js";const I=JSON.parse('{"title":"Introduction to the Course","description":"","frontmatter":{},"headers":[],"relativePath":"lectures/01-introduction.md","filePath":"lectures/01-introduction.md","lastUpdated":1755268310000}'),x={name:"lectures/01-introduction.md"};function v(_,i,S,C,P,E){return n(),r("div",null,i[0]||(i[0]=[e("h1",{id:"introduction-to-the-course",tabindex:"-1"},[a("Introduction to the Course "),e("a",{class:"header-anchor",href:"#introduction-to-the-course","aria-label":"Permalink to “Introduction to the Course”"},"​")],-1),e("h2",{id:"learning-objectives",tabindex:"-1"},[a("Learning Objectives "),e("a",{class:"header-anchor",href:"#learning-objectives","aria-label":"Permalink to “Learning Objectives”"},"​")],-1),e("ol",null,[e("li",null,"Understand what a data structure is and why it matters."),e("li",null,"Become familiar with the course environment and expectations."),e("li",null,"Provide advice on how to succeed in this course."),e("li",null,"Get your computer set up for the course.")],-1),e("div",{class:"youtube"},[e("div",null,[e("iframe",{width:"853",height:"480",src:"https://www.youtube-nocookie.com/embed/I0cg59m8gKE?rel=0&showinfo=0",title:"CSCI 315",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowfullscreen:"allowfullscreen"})])],-1),s('<h2 id="defining-the-topic" tabindex="-1">Defining the Topic <a class="header-anchor" href="#defining-the-topic" aria-label="Permalink to “Defining the Topic”">​</a></h2><h3 id="what-is-a-data-structure" tabindex="-1">What is a Data Structure? <a class="header-anchor" href="#what-is-a-data-structure" aria-label="Permalink to “What is a Data Structure?”">​</a></h3><ul><li><p>A <em><strong>data structure</strong></em> is a scheme for organizing data in computer memory.</p></li><li><p>Common data structures:</p><ul><li>lists,</li><li>arrays,</li><li>stacks,</li><li>queues,</li><li>heaps,</li><li>trees, and</li><li>graphs.</li></ul></li></ul><h4 id="why" tabindex="-1">Why? <a class="header-anchor" href="#why" aria-label="Permalink to “Why?”">​</a></h4><ul><li><p>How the data is <em><strong>organized</strong></em> affects the performance of different tasks.</p></li><li><p>Computer programmers choose data structures based on the <em><strong>nature of the data</strong></em> and the <em><strong>processes performed</strong></em> on that data.</p></li></ul><h4 id="binary-trees" tabindex="-1">Binary Trees <a class="header-anchor" href="#binary-trees" aria-label="Permalink to “Binary Trees”">​</a></h4><ul><li><p>A <em><strong>binary tree</strong></em> is common data structure organized like an upside-down tree.</p></li><li><p>Each spot on the tree, called a <em><strong>node</strong></em>, holds an item of data along with a left pointer and a right pointer.</p></li></ul><figure class="light-only"><img src="'+o+'" alt="Binary Tree" width="250px" class="light-only"><figcaption>Binary Tree</figcaption></figure><figure class="dark-only"><img src="'+l+'" alt="Binary Tree" width="250px" class="dark-only"><figcaption>Binary Tree</figcaption></figure><ul><li>The <em><strong>pointers</strong></em> are lined up so that the structure forms the upside-down tree with a single node at the top (called the <em>root node</em>) and branches increasing on the left and right as you go down the tree.</li></ul><h4 id="queues" tabindex="-1">Queues <a class="header-anchor" href="#queues" aria-label="Permalink to “Queues”">​</a></h4><p>A <em><strong>queue</strong></em> is an example of a commonly used simple data structure. A queue has a beginning and end, called the front and back of the queue</p><figure class="light-only"><img src="'+u+'" alt="Queue" width="200px" class="light-only"><figcaption>Queue</figcaption></figure><figure class="dark-only"><img src="'+h+'" alt="Queue" width="200px" class="dark-only"><figcaption>Queue</figcaption></figure><p>Data enters the queue at one end and leaves at the other. Because of this, data exits the queue in the same order in which it enters the queue, like people in a checkout line at a supermarket.</p><h4 id="discussion" tabindex="-1">Discussion <a class="header-anchor" href="#discussion" aria-label="Permalink to “Discussion”">​</a></h4><ul><li><p>Can you think of a way you organize information in your daily life?</p></li><li><p>Why might different situations require different ways of organizing?</p></li><li><p>Decisions, decisions: When to choose one over other?</p></li></ul><h2 id="important-considerations" tabindex="-1">Important Considerations <a class="header-anchor" href="#important-considerations" aria-label="Permalink to “Important Considerations”">​</a></h2><h3 id="our-first-goal" tabindex="-1">Our First Goal <a class="header-anchor" href="#our-first-goal" aria-label="Permalink to “Our First Goal”">​</a></h3><p>Finalize a solid conceptual foundation for Computer Science.</p><ul><li><p>The Parable of Wise &amp; Foolish Builders: <a href="https://www.biblegateway.com/passage/?search=Matthew+7%3A24-27&amp;version=ESV" target="_blank" rel="noreferrer">Matthew 7:24-27</a>.</p></li><li><p>Previously, you reworked existing examples.</p></li><li><p>Now that you have a bag of tricks (tools/data structures), solve this problem!</p></li></ul><h4 id="how-you-will-be-assessed" tabindex="-1">How you will be assessed. <a class="header-anchor" href="#how-you-will-be-assessed" aria-label="Permalink to “How you will be assessed.”">​</a></h4><ol><li><p>Solve numerous programming problems.</p></li><li><p>Fix broken code.</p></li><li><p>Fix the performance issues.</p></li><li><p>Demonstrate your understanding of how your program compiles.</p></li></ol><h4 id="related-goals" tabindex="-1">Related Goals <a class="header-anchor" href="#related-goals" aria-label="Permalink to “Related Goals”">​</a></h4><ul><li><p>Analyze a problem: find errors and performance issues.</p></li><li><p>Generate reports explaining performance issues and solutions.</p></li><li><p>Demonstrate a basic understanding of the Unix/Linux environment.</p></li><li><p>Become a competent programmer, who can get a job as a junior programmer.</p><ul><li>This is the last &quot;programming class&quot;.</li></ul></li></ul><h1 id="new-expectations" tabindex="-1">New Expectations <a class="header-anchor" href="#new-expectations" aria-label="Permalink to “New Expectations”">​</a></h1><table tabindex="0"><thead><tr><th>Class</th><th>Expectations</th></tr></thead><tbody><tr><td>CSCI 215/217</td><td>Create simple programs in an environment with limited possible syntax errors.</td></tr><tr><td>CSCI 235</td><td>Create simple programs from well-defined specifications, solid test cases, and example programs.</td></tr><tr><td>CSCI 325</td><td>CSCI 235 plus group work, OOP, and generics.</td></tr><tr><td><em><strong>CSCI 315</strong></em></td><td>Create both simple and somewhat complex programs from well-defined specifications and create your own test cases (no example programs!).</td></tr><tr><td>CSCI 415</td><td>Create advanced data structures, derive specifications from vague requirements, and perform basic research of emerging technologies.</td></tr></tbody></table><h3 id="both-science-and-engineering" tabindex="-1">Both Science AND Engineering <a class="header-anchor" href="#both-science-and-engineering" aria-label="Permalink to “Both Science AND Engineering”">​</a></h3><figure><img src="'+p+'" alt="Science vs. Engineering"><figcaption>Science vs. Engineering</figcaption></figure><p>&quot;Science is about knowing, engineering is about doing.&quot;<br> -<a href="https://en.wikipedia.org/wiki/Henry_Petroski" target="_blank" rel="noreferrer">Henry Petroski</a></p><ul><li><p>Science and Engineering are both in Computer <em><strong>Science</strong></em>.</p></li><li><p>This course has more <em><strong>science</strong></em> than previous courses.</p></li><li><p>Consider which way you tend to lean.</p></li></ul><h3 id="do-not-drop" tabindex="-1">Do Not Drop! <a class="header-anchor" href="#do-not-drop" aria-label="Permalink to “Do Not Drop!”">​</a></h3><figure class="light-only"><img src="'+c+'" alt="Queue" width="700px" class="light-only"><figcaption>Prerequisite Chart</figcaption></figure><figure class="dark-only"><img src="'+d+'" alt="Queue" width="700px" class="dark-only"><figcaption>Prerequisite Chart</figcaption></figure><h3 id="my-experience-taking-this-course" tabindex="-1">My Experience Taking this Course <a class="header-anchor" href="#my-experience-taking-this-course" aria-label="Permalink to “My Experience Taking this Course”">​</a></h3><figure><img src="'+m+'" alt="My Class Schedule"><figcaption>My Busy Class Schedule</figcaption></figure><ul><li>A challenging, but rewarding class.</li><li>Can be successful, even with a busy schedule.</li></ul><figure><img src="'+g+'" alt="Me, in AH 208, working on Data Structures"><figcaption>Me, in AH 208 working on Data Structures at 4:30 PM on April 5, 2005.</figcaption></figure><h3 id="workload" tabindex="-1">Workload <a class="header-anchor" href="#workload" aria-label="Permalink to “Workload”">​</a></h3><ul><li><p>Most students consider this class to have the highest workload.</p></li><li><p>This class prepares you for work experience.</p></li></ul><p>Passing Data Structures Data Structures is a <em><strong>marathon</strong></em>, <strong>not</strong> a <em>sprint</em>.</p><ul><li>About 24 labs, 3 projects, an ethics paper, and 2 exams.</li></ul><div class="warning custom-block"><p class="custom-block-title custom-block-title-default">WARNING</p><ul><li><p><em>The pass rate of a student becoming 3 weeks behind is 0%</em>.</p></li><li><p>If you are behind, please see me!</p></li></ul></div><figure><img src="'+f+'" alt="image" width="400px"><figcaption>Illustration from the 1855 edition of La Fontaine&#39;s Fables</figcaption></figure><h3 id="passing-data-structures" tabindex="-1">Passing Data Structures <a class="header-anchor" href="#passing-data-structures" aria-label="Permalink to “Passing Data Structures”">​</a></h3><p>Advice from a student who passed D.S. and Calc. 2 together while playing football.</p><ul><li><p>Do some Data Structure &amp; Calculus 2 each day.</p></li><li><p>Do not get behind.</p></li><li><p>If get stuck, <em><strong>ensure your code compiles</strong></em> to get partial credit.</p></li><li><p>If behind, don&#39;t try to catch up; take the 0 and move on.</p></li></ul><h2 id="dev-environment" tabindex="-1">Dev. Environment <a class="header-anchor" href="#dev-environment" aria-label="Permalink to “Dev. Environment”">​</a></h2><h3 id="unix-linux-environment" tabindex="-1">Unix/Linux Environment <a class="header-anchor" href="#unix-linux-environment" aria-label="Permalink to “Unix/Linux Environment”">​</a></h3><p>For this course, you may use any Linux environment.</p><ul><li><p>I use Ubuntu in the <em>Windows Subsystem for Linux</em> (<strong>WSL</strong>).</p></li><li><p>Another good option is <a href="https://linuxmint.com/" target="_blank" rel="noreferrer">Linux Mint</a> within <a href="https://www.virtualbox.org/" target="_blank" rel="noreferrer">VirtualBox</a>.<br> Make sure you <em><strong>install</strong></em> Linux.</p></li><li><p>Other options:</p><ul><li><p><a href="https://linuxmint.com/" target="_blank" rel="noreferrer">Mint</a>, <a href="https://ubuntu.com" target="_blank" rel="noreferrer">Ubuntu</a>, <a href="https://getfedora.org/" target="_blank" rel="noreferrer">Fedora</a>, <a href="https://www.centos.org/" target="_blank" rel="noreferrer">CentOS</a>, etc., should work fine.</p></li><li><p>macOS: Dual-boot with <a href="https://asahilinux.org/" target="_blank" rel="noreferrer">Asahi Linux</a>. See <a href="https://youtu.be/10thOSWGrpc" target="_blank" rel="noreferrer">this video</a> on the setup.</p></li><li><p>Windows CLI is not compatible with some required tools.</p></li><li><p>Unix OSs like <a href="https://en.wikipedia.org/wiki/Berkeley_Software_Distribution" target="_blank" rel="noreferrer">BSD</a> &amp; <a href="https://www.oracle.com/solaris" target="_blank" rel="noreferrer">Solaris</a>: I haven&#39;t tried, but it should be fine.</p></li></ul></li></ul><p>See the <a href="/csci-315/guides/setup-overview">Computer Setup Guide</a> for more information.</p><h3 id="setting-up-wsl-with-ubuntu-debian-on-windows-11" tabindex="-1">Setting up WSL with Ubuntu/Debian on Windows 11 <a class="header-anchor" href="#setting-up-wsl-with-ubuntu-debian-on-windows-11" aria-label="Permalink to “Setting up WSL with Ubuntu/Debian on Windows 11”">​</a></h3><ul><li><p>Follow the <a href="https://docs.microsoft.com/en-us/windows/wsl/install" target="_blank" rel="noreferrer">Official Installation Guide</a> to install Ubuntu 24.04 or later.</p></li><li><p>For a lab machine, add Ubuntu in WSL from your account (ask for help).</p></li><li><p>Our lab has Windows 11 with the Windows Subsystem for Linux <em><strong>enabled</strong></em>.</p></li><li><p>You will need to install Ubuntu on Windows.</p></li><li><p>Please login with your standard CSCI login.</p></li><li><p>Install Ubuntu from the Microsoft Store or by running the command:<br><code class="bash">wsl --install -d ubuntu</code></p></li></ul><h3 id="cli-environment-we-will-be-using-the-command-line-interface-cli" tabindex="-1">CLI Environment We will be using the Command Line Interface (CLI). <a class="header-anchor" href="#cli-environment-we-will-be-using-the-command-line-interface-cli" aria-label="Permalink to “CLI Environment We will be using the Command Line Interface (CLI).”">​</a></h3><h4 id="why-1" tabindex="-1">Why? <a class="header-anchor" href="#why-1" aria-label="Permalink to “Why?”">​</a></h4><ul><li><p>It forces you to understand more of what is actually happening.</p><ul><li>Most GUIs are &quot;paint&quot; on top of other programs</li></ul></li><li><p>For many tasks, you can accomplish a lot more in less time.</p></li></ul><figure class="light-only"><img src="'+b+'" alt="Geeks and repetitive tasks." width="500px" class="light-only"><figcaption>Geeks and repetitive tasks.</figcaption></figure><figure class="dark-only"><img src="'+w+'" alt="Geeks and repetitive tasks." width="500px" class="dark-only"><figcaption>Geeks and repetitive tasks.</figcaption></figure><h4 id="terminal" tabindex="-1">Terminal <a class="header-anchor" href="#terminal" aria-label="Permalink to “Terminal”">​</a></h4><ul><li><p>The <em><strong>terminal</strong></em> (terminal emulator) is a text-only window in a graphical user interface (GUI) that emulates a console.</p></li><li><p>It is where we use our CLI.</p></li><li><p>Run whatever you want (xterm, LilyTerm, Alacritty, LXTerminal, Extraterm, etc.)!</p></li></ul><p>Opening a Terminal</p><ul><li><p>The terminal window shows a standard prompt.</p></li><li><p>Prompts display all kinds of information, but they are not part of the commands you are giving to your system.</p></li></ul><figure><img src="'+k+'" alt="image" width="400px"><figcaption>Example of opening a terminal in Linux Mint</figcaption></figure><figure><img src="'+y+`" alt="image" width="400px"><figcaption>Example of an open terminal window</figcaption></figure><p>Install Required Software On your Linux box (Mint, Ubuntu, Ubuntu on Windows), install the basic packages for our course.</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sudo apt update</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sudo apt install </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y build</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">essential git valgrind gnuplot</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="git-—-a-version-control-system" tabindex="-1">Git — A Version-Control System <a class="header-anchor" href="#git-—-a-version-control-system" aria-label="Permalink to “Git — A Version-Control System”">​</a></h2><p>Git:</p><ul><li>Developed by <a href="https://en.wikipedia.org/wiki/Linus_Torvalds" target="_blank" rel="noreferrer">Linus Torvalds</a>.</li><li>Very Popular</li><li>Open Source and Free!</li><li>Just a folder in a directory</li><li>Distributed -- every copy (clone) has everything.</li></ul><p>Other Version-Control Systems:</p><ul><li>Subversion (SVN)</li><li>Concurrent Versions System (CVS)</li><li>Perforce</li><li>Mercurial</li></ul><h2 id="getting-set-up-for-this-course" tabindex="-1">Getting Set Up for This Course <a class="header-anchor" href="#getting-set-up-for-this-course" aria-label="Permalink to “Getting Set Up for This Course”">​</a></h2><p>Before continuing, complete all of the step in the <a href="/csci-315/guides/setup-overview">Quickstart Guide</a>.</p><p>After that, review the <a href="/csci-315/lectures/01-basic-unix">Basic Unix Commands</a>.</p>`,75)]))}const T=t(x,[["render",v]]);export{I as __pageData,T as default};
