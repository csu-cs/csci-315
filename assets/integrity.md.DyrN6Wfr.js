import{_ as o,c as i,o as t,af as a}from"./chunks/framework.HDGmwDL2.js";const u=JSON.parse('{"title":"Academic Integrity Guidelines for Computer Science","description":"","frontmatter":{},"headers":[],"relativePath":"integrity.md","filePath":"integrity.md","lastUpdated":1755268310000}'),r={name:"integrity.md"};function s(n,e,c,l,p,d){return t(),i("div",null,e[0]||(e[0]=[a('<h1 id="academic-integrity-guidelines-for-computer-science" tabindex="-1">Academic Integrity Guidelines for Computer Science <a class="header-anchor" href="#academic-integrity-guidelines-for-computer-science" aria-label="Permalink to “Academic Integrity Guidelines for Computer Science”">​</a></h1><p>The purpose of this document is to interpret <a href="https://www.charlestonsouthern.edu/wp-content/uploads/Policy-R-58-updated-Feb-2023.pdf" target="_blank" rel="noreferrer">Charleston Southern University&#39;s definitions of academic dishonesty and plagiarism</a> in the context of computer science courses. These guidelines clarify these policies but do not supersede them. Many of these principles are also drawn from professional codes of ethics in computing, such as the <a href="https://www.acm.org/code-of-ethics" target="_blank" rel="noreferrer">ACM Code of Ethics and Professional Conduct</a>, which apply general ethics to all computing activities.</p><p>Goals differ between professional and educational settings. In a professional setting, the primary goal is often to produce working code or other artifacts with integrity. In an educational setting, the primary goal is learning with integrity.</p><h2 id="collaboration" tabindex="-1">Collaboration <a class="header-anchor" href="#collaboration" aria-label="Permalink to “Collaboration”">​</a></h2><p>Computer science is a collaborative discipline. Teams can accomplish more than individuals. However, your professor may require that you work individually to better serve or assess your learning. In your computer science classes, many assignments will permit or require collaboration. Collaboration may be an explicit learning goal of the assignment, or collaboration may be used in service of other learning goals.</p><p>When you turn in collaborative work, all contributors must be clearly identified. All contributors are accountable for all parts of jointly authored work. All contributors are responsible for learning from each part of the assignment.</p><h2 id="assistance" tabindex="-1">Assistance <a class="header-anchor" href="#assistance" aria-label="Permalink to “Assistance”">​</a></h2><p>Whether working as a team or individually, you may seek assistance on most assignments from many sources, including professors, mentors, tutors, and lab aides. Sometimes, you may also seek assistance from classmates or other students.</p><p>Assistance with programming exercises may serve one of three purposes:</p><ol><li><p>To help you get started,</p></li><li><p>to correct a syntax error, or</p></li><li><p>to debug code that does not work as intended.</p></li></ol><p>In all cases, those assisting should ask questions instead of providing answers. Never write code for another student or show them your solutions. Moving away from the computer, for example, to draw on a whiteboard, will help to emphasize concepts. Whether giving or receiving such assistance, your goal should be learning. Remember that the responsibility for completing the assignment belongs to the learner.</p><p>Websites such as stackoverflow.com assist both professionals and learners. If your professor encourages their use, these sources may suggest approaches or help you debug your code. In using such sites, again, your goal should be learning.</p><p>Others&#39; intellectual contributions to your work must be explicitly acknowledged (e.g., by a comment in your code). Such acknowledgments credit others for their contributions, and allow readers of your code to consult the resources you used. People should be thanked by name; written information should be identified by URL or bibliographic citation.</p><p>Like proofreading, help with syntax errors is not considered an intellectual contribution (even though you might learn from it!) and does not require explicit acknowledgment.</p><p>Different courses have different learning goals. Your professor will state policies regarding appropriate collaboration and assistance in the course syllabus or individual assignments. If you are unsure if assistance is appropriate on an assignment, ask your professor!</p><h2 id="academic-integrity-and-professionalism" tabindex="-1">Academic Integrity and Professionalism <a class="header-anchor" href="#academic-integrity-and-professionalism" aria-label="Permalink to “Academic Integrity and Professionalism”">​</a></h2><p>Representing one&#39;s work honestly is critical to the academic pursuit of truth. In an educational setting, assigned work is intended to help you learn. Academic dishonesty undermines your learning opportunities and results in unfair and inaccurate assessment of your learning.</p><p>Beyond the academic setting, honesty is a key aspect of professionalism. We do not wish to graduate professionals who would put their employers or the public at risk by copying code without permission or attribution, using code they do not understand, taking false credit, or pretending that code works correctly when it does not.</p><h2 id="academic-dishonesty-in-computer-science" tabindex="-1">Academic Dishonesty in Computer Science <a class="header-anchor" href="#academic-dishonesty-in-computer-science" aria-label="Permalink to “Academic Dishonesty in Computer Science”">​</a></h2><p>Academic dishonesty in computer science courses may include:</p><ul><li><p>Falsification of program output;</p></li><li><p>Seeking inappropriate collaboration or assistance;</p></li><li><p>Failure to acknowledge collaboration or assistance;</p></li><li><p>Plagiarism of code.</p></li></ul><p>It is always dishonest to present code as your own when obtained from another student or a public source, whether you understand that code or not.</p><p>You are also committing academic dishonesty if you knowingly help others to misrepresent their work (e.g., by providing inappropriate assistance or by publishing solutions to homework problems).</p><h2 id="plagiarism-in-computer-science" tabindex="-1">Plagiarism in Computer Science <a class="header-anchor" href="#plagiarism-in-computer-science" aria-label="Permalink to “Plagiarism in Computer Science”">​</a></h2><p>For many simple problems, code must follow a particular structure or pattern to solve the problem correctly and efficiently. Such patterns may be developed by your textbook or in class or may be inferred by reading many programs that solve similar problems. Using these common patterns is not plagiarism and does not require citation.</p><p>As problems grow in complexity, so do programs. The programmer must exercise creativity to identify alternative approaches and wisdom to choose the best approach. Many further choices are required to translate an approach into code. Programs are copyrighted works, just like books, paintings, and musical compositions. Programmers have distinctive voices that vary in their maturity. An experienced programmer, such as your professor, can often tell when one programmer has copied the work of another.</p><p>Any code copied or adapted from another source must be cited with a comment. In your comment, provide a URL or other bibliographic information as required to find the original source. If you use a module that has an explicit license agreement, that license must be preserved along with the module.</p><p>If you are using an idea from a published program or another source beyond the textbook, cite that source and explain what idea you are using.</p><p>Like written English, programming languages do not explicitly distinguish between quotation and paraphrase. Your comments should explain whether you have copied code, adapted code, or used the ideas of others to inspire your own code.</p><h2 id="citation-examples" tabindex="-1">Citation Examples <a class="header-anchor" href="#citation-examples" aria-label="Permalink to “Citation Examples”">​</a></h2><p>It is more important to follow the spirit of these guidelines than to use a specific citation format. These examples are provided as suggestions only.</p><p>Citing a person: <em>Morgan helped me understand how to use a dictionary to map from names to locations.</em></p><p>Citing an online source: <em>I was having trouble opening files from the web. StackOverflow showed me how to use the encoding parameter of the open() method: <a href="https://stackoverflow.com/questions/28104377/how-to-convert-utf-8-code-to-symbol-characters-in-python" target="_blank" rel="noreferrer">https://stackoverflow.com/questions/28104377/how-to-convert-utf-8-code-to-symbol-characters-in-python</a></em></p><p>Using a licensed module: <em>John Zelle&#39;s graphics.py module is licensed under the GNU Public License (GPL). When you download this module and use it in your code, you may not delete the preamble that identifies the author and the license agreement.</em></p><h2 id="artificial-intelligence-ai" tabindex="-1">Artificial Intelligence (AI) <a class="header-anchor" href="#artificial-intelligence-ai" aria-label="Permalink to “Artificial Intelligence (AI)”">​</a></h2><p>While proper AI use is an essential skill, misuse of AI will be a constant concern. AI misuse in an academic setting short-circuits the learning process to give the illusion of proficiency without the necessary depth. This is not a new problem. The advent of the pocket calculator posed a similar problem in that students could arrive at an answer without understanding it. The proper purpose of AI use in academics focuses on developing personal problem-solving skills.</p><p><em>Before</em> using AI assistance, check with your instructor to determine if it is (1) prohibited, (2) permitted with conditions, or (3) required for a given assignment.</p><ol><li><p>AI use may be <strong>prohibited</strong> to ensure that you have the basic concepts, just as children should be comfortable performing division in mathematics before being allowed to divide using a calculator.</p></li><li><p>AI use may be <strong>permitted</strong> with conditions. Understand the limitations of AI and that you are responsible for the output whether it is AI-generated. Be prepared to explain how you used AI to accomplish the task and ensure that you cite it properly. Your professor may have specific instructions for your course such as saving prompts.</p></li><li><p>Your professor may <strong>require</strong> the use of AI for certain assignments. All the aspects mentioned for permitted use apply. Because the AI aspect is part of the learning experience, expect detailed instruction on reporting requirements, such as saving prompts, how you validated the results, and how useful AI was in accomplishing the task.</p></li></ol><h2 id="acknowledgments" tabindex="-1">Acknowledgments <a class="header-anchor" href="#acknowledgments" aria-label="Permalink to “Acknowledgments”">​</a></h2><p>This document was adapted from <a href="https://cs.whitman.edu/~grayc/unixtut/integrity.txt" target="_blank" rel="noreferrer">Whitman College&#39;s Guidelines</a>, which is licensed under a <a href="http://creativecommons.org/licenses/by-nc-sa/2.0/" target="_blank" rel="noreferrer">Creative Commons License</a>. The authors draw upon ideas in the Grinnell College Computer Science Academic Honesty Policy, particularly in our discussion of academic honesty and professionalism, as well as the ACM Code of Ethics and Professional Practice. Also, they draw upon Tips for Tutors provided by csteachingtips.org in our discussion of assistance with programming exercises.</p>',40)]))}const m=o(r,[["render",s]]);export{u as __pageData,m as default};
